{"version":3,"file":"static/js/153.ebe7e2ae.chunk.js","mappings":"sJAEIA,EAAoB,IAAIC,UAC1B,gEAyBIC,EAA6C,SAACC,GAClD,OACE,gBAAKC,MAAO,CAAEC,OAAQ,QAASC,SAAU,OAAQC,MAAO,SAAxD,SACGJ,EAAMK,SAASC,KAAI,SAACC,GACnB,OAAO,SAACC,EAAD,CAASC,KAAMF,GACvB,KAGN,EAEKC,EAAwC,SAACR,GAC7C,OACE,4BACE,gBAAKU,IAAKV,EAAMS,KAAKE,MAAOC,IAAI,GAAGR,MAAO,GAAIF,OAAQ,MACtD,0BAAOF,EAAMS,KAAKI,YAClB,yBAAMb,EAAMS,KAAKK,YAGtB,EAEKC,EAAyC,SAACf,GAC5C,OAAsCgB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAMF,OACE,4BACE,qBAAUC,SAAU,SAACC,GAAWF,EAAeE,EAAMC,cAAcD,MAAO,EAAEA,MAAOH,KACnF,mBACA,mBAAQK,QAAS,kBAREF,EAQgBH,EAPjCpB,EAAkB0B,KAAKH,QACvBF,EAAe,IAFC,IAACE,CAQF,EAAjB,4BAGL,EAED,UA1D2C,SAACpB,GAC1C,OAAgCgB,EAAAA,EAAAA,UAAS,IAAzC,eAAOX,EAAP,KAAiBmB,EAAjB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR5B,EAAkB6B,iBAAiB,WAAW,SAACC,GAC3C,IAAIC,EAAcC,KAAKC,MAAMH,EAAMlB,MAErCe,GAAY,SAACO,GAAD,wBAAsBA,IAAtB,OAAuCH,GAAvC,GAIb,GACF,GAAE,KAGD,4BACE,SAAC7B,EAAD,CAAcM,SAAUA,KACxB,SAACU,EAAD,MAGL,C","sources":["components/Main/Chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nlet messagesWebSocket = new WebSocket(\r\n  \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n);\r\n\r\nconst Chat: React.FunctionComponent<any> = (props: any) => {\r\n  const [messages, setMessages] = useState([] as any[]);\r\n\r\n  useEffect(() => {\r\n    messagesWebSocket.addEventListener(\"message\", (event: any) => {\r\n        let newMessages = JSON.parse(event.data)\r\n    //   setMessages([...messages, ...JSON.parse(event.data)]);\r\n      setMessages((prevMessages) => [...prevMessages, ...newMessages])\r\n      \r\n\r\n\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ChatMessages messages={messages}></ChatMessages>\r\n      <ChatForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatMessages: React.FunctionComponent<any> = (props) => {\r\n  return (\r\n    <div style={{ height: \"400px\", overflow: 'auto', width: '400px' }}>\r\n      {props.messages.map((element: any) => {\r\n        return <Message data={element}></Message>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message: React.FunctionComponent<any> = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={props.data.photo} alt=\"\" width={50} height={50} />\r\n      <span>{props.data.userName}</span>\r\n      <div>{props.data.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChatForm: React.FunctionComponent<any> = (props) => {\r\n    const [messageText, setMessageText] = useState('')\r\n     \r\n    const sendMessage = (value: string) => {\r\n        messagesWebSocket.send(value)\r\n        setMessageText('')\r\n    }\r\n  return (\r\n    <div>\r\n      <textarea onChange={(value) => {setMessageText(value.currentTarget.value)}} value={messageText}></textarea>\r\n      <br />\r\n      <button onClick={() => sendMessage(messageText)}>Send Message</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["messagesWebSocket","WebSocket","ChatMessages","props","style","height","overflow","width","messages","map","element","Message","data","src","photo","alt","userName","message","ChatForm","useState","messageText","setMessageText","onChange","value","currentTarget","onClick","send","setMessages","useEffect","addEventListener","event","newMessages","JSON","parse","prevMessages"],"sourceRoot":""}