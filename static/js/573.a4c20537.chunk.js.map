{"version":3,"file":"static/js/573.a4c20537.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Main/Profile/Profile.module.scss?2ab5","webpack://my-app/./src/components/Main/Profile/Posts/Post/Post.module.scss?162a","components/Main/Profile/Posts/Post/Post.jsx","components/Main/Profile/Posts/Posts.jsx","webpack://my-app/./src/components/Main/Profile/ProfileInfo/ProfileInfo.module.scss?7ff2","components/Main/Profile/ProfileInfo/ProfileInfoHook.jsx","components/Main/Profile/ProfileInput/ProfileInput.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx","hoc/AuthHoc.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Profile_section__ai+0H\",\"section__profile\":\"Profile_section__profile__LXolN\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"Post_avatar__tX11S\"};","import React from \"react\";\r\nimport classes from \"./Post.module.scss\";\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src=\"https://avatars.githubusercontent.com/u/85486375?v=4\"\r\n        alt=\"avatar\"\r\n        className={classes.avatar}\r\n      />\r\n      <div>{props.postInfo.user}</div>\r\n      <div>{props.postInfo.text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport { Post } from './Post/Post'\r\n\r\nexport const Posts = (props) => {\r\n    console.log('RENDER')\r\n    let posts = props.posts.map((item) =>  <Post postInfo={item}/>)\r\n    return <div>\r\n        {posts}\r\n    </div>\r\n}\r\n\r\nexport default React.memo(Posts)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"ProfileInfo_avatar__YhCBy\",\"profile__info\":\"ProfileInfo_profile__info__-WZ-B\"};","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.setStatusThunk(status);\r\n  }\r\n\r\n  const changeStatus = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n \r\n    return (\r\n      <div className={classes.profile__info}>\r\n        <div>\r\n          <img\r\n            src={\r\n              props.profile.photos?.small\r\n                ? props.profile.photos.small\r\n                : \"https://avatars.githubusercontent.com/u/85486375?v=4\"\r\n            }\r\n            alt=\"avatar\"\r\n            className={classes.avatar}\r\n          />\r\n        </div>\r\n        {editMode ? (\r\n          <input\r\n            type=\"text\"\r\n            autoFocus={true}\r\n            onBlur = {deactivateEditMode}\r\n            defaultValue={status}\r\n            onChange={changeStatus}\r\n          />\r\n        ) : (\r\n          <div onDoubleClick={activateEditMode}>{status}</div>\r\n        )}\r\n        <div className=\"profile-description\">\r\n          <ul>\r\n            <li>{props.profile.fullName}</li>\r\n            <li>{props.profile.userId}</li>\r\n            <li>{props.profile.aboutMe}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengtth50, minLength } from '../../../../Validate/Validate';\r\nimport { textareaControl } from './../../../Common/FormControl/FormControl';\r\n\r\n\r\n\r\nconst ProfileInput = (props) => {\r\n  const { handleSubmit } = props;\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Field\r\n        component={textareaControl}\r\n        name={'post'}\r\n        validate={[maxLengtth50, minLength]}\r\n        placeholder=\"Post text...\"\r\n      />\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport const ProfileInputContainer = (props) => {\r\n  let lol = (formData) => {\r\n    props.addNewPostText(formData.post)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInputContainerRedux onSubmit={lol}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileInputContainerRedux = reduxForm({\r\n  form: \"post\",\r\n})(ProfileInput);\r\n","import React from \"react\";\r\nimport classes from \"./Profile.module.scss\"\r\nimport Posts from \"./Posts/Posts\";\r\nimport { ProfileInfo } from \"./ProfileInfo/ProfileInfoHook\";\r\nimport { ProfileInputContainer } from \"./ProfileInput/ProfileInput\";\r\n\r\n\r\nexport const Profile = (props) => {\r\n\r\n\r\n  return (\r\n    <section className={classes.section}>\r\n      <div className={classes.section__profile}>\r\n        <ProfileInfo profile={props.profile} status={props.status} setStatusThunk={props.setStatusThunk}/>\r\n        <ProfileInputContainer newPost={props.newPost} addNewPostText={props.addNewPostText} />\r\n        <Posts posts={props.posts}/>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Profile } from \"./Profile\";\r\nimport { addNewPostText} from \"../../../state/profileReducer\";\r\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux/es/exports\";\r\nimport { getProfileThunk, getStatusThunk, setStatusThunk } from \"./../../../state/profileReducer\";\r\nimport { AuthHoc } from \"./../../../hoc/AuthHoc\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId || this.props.authId ;\r\n\r\n    this.props.getProfileThunk(userId);\r\n    this.props.getStatusThunk(userId)\r\n    // this.props.setStatusThunk('HELLO WORLD!')\r\n\r\n  } // метод вызывается после рендеринга компонента\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Profile {...this.props} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// export const ProfileContainer = (props) => {\r\n\r\n//   // let newPostText = props.store.getState().profilePage.newPost;\r\n\r\n//   // let addNewPostText = () => {\r\n//   //   props.store.dispatch(addNewPostActionCreator());\r\n//   // };\r\n\r\n//   // let changePostText = (text) => {\r\n//   //   props.store.dispatch(updateNewPostActionCreator(text));\r\n//   // };\r\n\r\n//   // let posts = props.store.getState().profilePage.posts;\r\n\r\n//   return (\r\n//     <MyContext.Consumer>\r\n//       {(store) => {\r\n//           let newPostText = store.getState().profilePage.newPost;\r\n\r\n//           let addNewPostText = () => {\r\n//             store.dispatch(addNewPostActionCreator());\r\n//           };\r\n\r\n//           let changePostText = (text) => {\r\n//             store.dispatch(updateNewPostActionCreator(text));\r\n//           };\r\n\r\n//           let posts = store.getState().profilePage.posts;\r\n//         return (\r\n//           <Profile\r\n//             newPost={newPostText}\r\n//             addNewPostText={addNewPostText}\r\n//             changePostText={changePostText}\r\n//             posts={posts}\r\n//           ></Profile>\r\n//         );\r\n//       }}\r\n//     </MyContext.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToPropse = (state) => {\r\n  return {\r\n    newPost: state.profilePage.newPost,\r\n    posts: state.profilePage.posts,\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authId: state.auth.id\r\n  };\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     addNewPostText: () => {\r\n//       dispatch(addNewPostText());\r\n//     },\r\n//     changePostText: (text) => {\r\n//       dispatch(changePostText(text));\r\n//     },\r\n//     setProfile: (profile) => {\r\n//       dispatch(setProfile(profile));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default compose(\r\n  connect(mapStateToPropse, {\r\n    addNewPostText,\r\n    getProfileThunk,\r\n    getStatusThunk,\r\n    setStatusThunk\r\n  }),\r\n  withRouter,\r\n  AuthHoc\r\n)(ProfileContainer);\r\n// данная функция делает вызов функций одну за одной начиная с ProfileContainer и заканчивая connect\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n// let ProfileContainerWithRouter = withRouter(AuthHoc(ProfileContainer)); // возвращает нам новую компоненту, в пропсы прокидывая ей данные по URL(уже не работает, нужны хуки)\r\n\r\n// // Мы вместо функции mapDispatchToProps в connect можем сразу передать наши actionCreator, connect сам сделает коллбек функции на их основе\r\n\r\n// export default connect(mapStateToPropse, {\r\n//   addNewPostText,\r\n//   changePostText,\r\n//   getProfileThunk,\r\n// })(ProfileContainerWithRouter);\r\n\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux/es/exports\";\r\n\r\nlet mapStateToPropse = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport function AuthHoc(Component) {\r\n  function RedirectAuthHoc(props) {\r\n    if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n    return (\r\n      <>\r\n        <Component {...props} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return connect(mapStateToPropse)(RedirectAuthHoc)\r\n}\r\n\r\n// что бы не писать isAuth в каждой контейнерной компоненте, и не делать проверку if (!props.isAuth) return <Navigate to=\"/login\" />;\r\n// мы создали специальную компоненту \"Компоненту высокого порядка\", которая принимает в себя компоненту и возвращает другую компоненту\r\n// также мы обернули эту компоненту в коннект, что б в каждом файле не передавать isAuth: state.auth.isAuth,\r\n"],"names":["Post","props","src","alt","className","classes","postInfo","user","text","Posts","console","log","posts","map","item","React","ProfileInfo","useState","editMode","setEditMode","status","setStatus","useEffect","profile","photos","small","type","autoFocus","onBlur","setStatusThunk","defaultValue","onChange","e","currentTarget","value","onDoubleClick","fullName","userId","aboutMe","ProfileInputContainer","ProfileInputContainerRedux","onSubmit","formData","addNewPostText","post","reduxForm","form","handleSubmit","Field","component","textareaControl","name","validate","maxLengtth50","minLength","placeholder","Profile","newPost","ProfileContainer","this","router","params","authId","getProfileThunk","getStatusThunk","compose","connect","state","profilePage","auth","id","Component","location","useLocation","navigate","useNavigate","useParams","AuthHoc","mapStateToPropse","isAuth","to"],"sourceRoot":""}